<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>axiomagic.root</artifactId>
        <groupId>org.appdapter</groupId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>axiomagic.dmo.fibo</artifactId>


    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>axiomagic.web.pond</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.topbraid</groupId>
            <artifactId>shacl</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.matheclipse</groupId>
            <artifactId>matheclipse-io</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.matheclipse</groupId>
            <artifactId>matheclipse-core</artifactId>
            <version>2.0.0</version>

            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-android</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
                <exclusion>
                   <groupId>org.apache.logging.log4j</groupId>
                   <artifactId>log4j-core</artifactId>
                </exclusion>
                <!--

                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
java.lang.NoClassDefFoundError: org/apache/logging/log4j/LogManager
	at edu.jas.kern.ComputerThreads.<clinit>(ComputerThreads.java:31)
	at org.matheclipse.core.expression.F.<clinit>(F.java:3231)
	at org.matheclipse.core.eval.ExprEvaluator.<clinit>(ExprEvaluator.java:130)
	at axmgc.xpr.sym_mth.TstSymFncs.doStuff(TstSymCalculus.scala:16)
                -->

            </exclusions>
        </dependency>
        <!-- borkl == berleley-oracle -->
        <!-- https://mvnrepository.com/artifact/com.oracle.kv/oracle-nosql-client -->
        <dependency>
            <groupId>com.oracle.kv</groupId>
            <artifactId>oracle-nosql-client</artifactId>
            <version>18.3.10</version>
        </dependency>

        <!-- Server 18.3.10 is latest in Maven-Central, depends on com.sleepycat.je 18.3.12
        -->
        <dependency>
            <groupId>com.oracle.kv</groupId>
            <artifactId>oracle-nosql-server</artifactId>
            <version>18.3.10</version>
        </dependency>
<!--
The oracle-server deps above automatically pull in berkeley DB - java edition - v18.3.12
 https://mvnrepository.com/artifact/com.sleepycat/je
        <dependency>
            <groupId>com.sleepycat</groupId>
            <artifactId>je</artifactId>
            <version>18.3.12</version>
        </dependency>
-->

    </dependencies>

    <repositories>
        <repository>
            <id>snapshots-repo</id>
            <name>snap_repo_name</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
	<!-- This ez-dmo prj does not need a "test" folder.
        <testSourceDirectory>src/test/scala</testSourceDirectory>
	-->

        <plugins>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala.plugin.version}</version>
            </plugin>
        </plugins>

    </build>
</project>
